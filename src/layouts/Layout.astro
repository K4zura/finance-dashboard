---
import "@/styles/global.css";
import { ClientRouter } from "astro:transitions";
import { getAuth } from "firebase-admin/auth";
import AsideBar from "@/components/common/AsideBar.astro";
import Header from "@/components/common/Header.astro";
import { app } from "../firebase/server";

const auth = getAuth(app);
let user;

if (Astro.cookies.has("__session")) {
	const sessionCookie = Astro.cookies.get("__session")!.value;
	const decodedCookie = await auth.verifySessionCookie(sessionCookie);
	user = await auth.getUser(decodedCookie.uid);
}

// console.log(user)

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Dashboard</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content="A dashboard to manage your finances" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@Dashboard" />
    <meta name="twitter:creator" content="@k4zura" />
    <meta name="twitter:title" content="JinBoard" />
    <meta name="twitter:description" content="A dashboard to manage your finances" />
    <ClientRouter />
  </head>
  <body id="app" class="md:gap-4 p-4">
    <button class="peer bg-primary h-8 w-8 absolute hidden not-md:block top-0 left-0 rounded-br-xl cursor-pointer has-checked:translate-x-[240px] transition-transform">O
    <input type="checkbox" class="absolute inset-0 h-full w-full opacity-0"></button>
    <AsideBar user={user} />

    <main class="flex flex-col gap-4 overflow-y-auto p-3 [grid-area:main]">
      <Header title={title} description={description}>
        <slot name="header-btn" />
      </Header>
      <slot />
    </main>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
  #app {
    display: grid;
    grid-template-areas: 'aside main main';
    /* 'aside main main'; */
    gap
    grid-template-columns: 0px 1fr;
    /* grid-template-rows: auto 1fr; */
  }
  @media (width >= 768px) {
    #app {
      display: grid;
      grid-template-areas: 'aside main main';
      /* 'aside main main'; */
      grid-template-columns: 240px 1fr;
      /* grid-template-rows: auto 1fr; */
    }
  }

  main {
    --sb-track-color: #232e3300;
    --sb-thumb-color: #6baf8d00;
    --sb-size: 0px;
  }

  main::-webkit-scrollbar {
    width: var(--sb-size);
  }

  main::-webkit-scrollbar-track {
    background: var(--sb-track-color);
    border-radius: 3px;
  }

  main::-webkit-scrollbar-thumb {
    background: var(--sb-thumb-color);
    border-radius: 3px;
  }

  @supports not selector(::-webkit-scrollbar) {
    main {
      scrollbar-color: var(--sb-thumb-color) var(--sb-track-color);
    }
  }
</style>
