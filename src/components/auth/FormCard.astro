---
import GoogleIcon from "@/assets/icons/brands/google.svg";
import InfoIcon from "@/assets/icons/brands/info.svg";
import UserIcon from "@/assets/icons/brands/user.svg";

const lang = Astro.params.lang;

interface Props {
	side: string;
	post: string;
}

const { side, post } = Astro.props;

let anim;
if (side === "left") {
	anim = {
		old: {
			name: "hide-left",
			duration: "0.3s",
			easing: "ease-in",
			direction: "reverse",
		},
		new: {
			name: "appear-left",
			duration: "0.3s",
			easing: "ease-in-out",
		},
	};
} else {
	anim = {
		old: {
			name: "hide-right",
			duration: "0.3s",
			easing: "ease-in",
			direction: "reverse",
		},
		new: {
			name: "appear-right",
			duration: "0.3s",
			easing: "ease-in-out",
		},
	};
}

const mySlide = {
	forwards: anim,
	backwards: anim,
};
---

<section
  class={`bg-light absolute flex ${side}-0 h-[614px] w-[460px] flex-col justify-center rounded-xl px-10`}
  transition:animate={mySlide}
>
  <h1 class="text-dark mb-12 flex items-center justify-center text-5xl font-extrabold">
    <InfoIcon class="stroke-3 size-16" />
    <slot />
  </h1>
  <form action={post} method="post" class="flex flex-col justify-center gap-5">
    <slot name="fields" />

    <button
      type="submit"
      class="bg-secondary text-light cursor-pointer self-end rounded-md px-8 py-1.5 text-lg font-bold"
      >START</button
    >
  </form>
  <div class="text-dark relative mt-10 flex items-center justify-center text-lg font-bold">
    <div
      class="bg-dark after:bg-dark absolute left-0 h-1 w-5/12 after:absolute after:-left-3 after:-top-1.5 after:h-4 after:w-4 after:rounded-full"
    >
    </div>
    <p>O</p>
    <div
      class="bg-dark after:bg-dark absolute right-0 h-1 w-5/12 after:absolute after:-right-3 after:-top-1.5 after:h-4 after:w-4 after:rounded-full"
    >
    </div>
  </div>

  <div class="mt-2 flex justify-evenly">
    <button id="google" class="bg-dark size-16 cursor-pointer rounded-full p-2.5">
      <GoogleIcon class="size-full" />
    </button>
    <a href={`/${lang}/`} class="bg-dark size-16 cursor-pointer rounded-full p-2.5">
      <UserIcon class="text-light pointer-events-none size-full" />
    </a>
  </div>
</section>

<script>
  import { getAuth, inMemoryPersistence, GoogleAuthProvider, signInWithPopup } from 'firebase/auth'
  import { app } from '@/firebase/client'

  const auth = getAuth(app)
  auth.setPersistence(inMemoryPersistence)

  const googleSignin = document.querySelector('#google') as HTMLButtonElement
  googleSignin.addEventListener('click', async () => {
    const provider = new GoogleAuthProvider()
    const userCredential = await signInWithPopup(auth, provider)
    const idToken = await userCredential.user.getIdToken()
    const res = await fetch('/api/auth/signin', {
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    })

    if (res.redirected) {
      window.location.assign(res.url)
    }
  })
</script>
