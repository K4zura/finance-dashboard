---
import { Image } from "astro:assets";
import type { UserRecord } from "firebase-admin/auth";
import BookIcon from "@/assets/icons/book.svg";
import CalendarIcon from "@/assets/icons/calendar.svg";
import CheckIcon from "@/assets/icons/check.svg";
import ClockIcon from "@/assets/icons/clock.svg";
import DashboardIcon from "@/assets/icons/dashboard.svg";
import FolderIcon from "@/assets/icons/folder.svg";
import NoteIcon from "@/assets/icons/note.svg";
import PiggyBankIcon from "@/assets/icons/piggy-bank.svg";
import SettingsIcon from "@/assets/icons/settings.svg";
import TargetIcon from "@/assets/icons/target.svg";
import TrendingDownIcon from "@/assets/icons/trending-down.svg";
import TrendingUpIcon from "@/assets/icons/trending-up.svg";
import WalletIcon from "@/assets/icons/wallet.svg";
import imageProfile from "@/assets/images/jinwoo.avif";
import BarItem from "@/components/common/BarItem.astro";
import InitBackdrop from "@/components/common/InitBackdrop.svelte";
import { getTranslations } from "@/i18n/index";

const lang = Astro.params.lang;
const t = getTranslations(lang ?? "es"); // Provide default language if undefined

const menuItems = [
	{
		title: "Finanzas",
		items: [
			{
				title: t.income.title,
				url: "/finances/income",
				icon: TrendingUpIcon,
			},
			{
				title: t.expense.title,
				url: "/finances/expense",
				icon: TrendingDownIcon,
			},
			{
				title: t.savings.title,
				url: "/finances/savings",
				icon: PiggyBankIcon,
			},
			{
				title: t.budget.title,
				url: "/finances/budget",
				icon: WalletIcon,
			},
		],
	},
	{
		title: "Productivity",
		items: [
			{
				title: "Projects",
				url: "/productivity/projects",
				icon: FolderIcon,
			},
			{
				title: "Tasks",
				url: "/productivity/tasks",
				icon: CheckIcon,
			},
			{
				title: "Notes",
				url: "/productivity/notes",
				icon: NoteIcon,
			},
			{
				title: "Habits",
				url: "/productivity/habits",
				icon: TargetIcon,
			},
		],
	},
	{
		title: "tools",
		items: [
			{
				title: "Calendar",
				url: "/tools/calendar",
				icon: CalendarIcon,
			},
			{
				title: "Time",
				url: "/tools/time",
				icon: ClockIcon,
			},
			{
				title: "Learning",
				url: "/tools/learning",
				icon: BookIcon,
			},
		],
	},
];

interface Props {
	user?: UserRecord | null;
}

const { user } = Astro.props;
---

<aside
  transition:persist="true"
  class="bg-primary relative flex flex-1 flex-col justify-between gap-4 overflow-y-auto overflow-x-hidden rounded-lg [grid-area:aside] not-md:z-30 not-md:h-screen not-md:inset-0 not-md:-translate-x-[240px] not-md:w-[240px] not-md:rounded-none not-md:absolute peer-has-checked:translate-x-0 transition-transform"
>
  <section class="mx-4 mt-4 flex flex-col items-center gap-0.5">
    {
      user ? (
        <picture class="border-dark mx-1 size-28 overflow-hidden rounded-full border-4">
          <Image
            inferSize
            loading="eager"
            src={user.photoURL ?? ""}
            alt={`img profile of ${user.displayName}`}
            class="aspect-square size-full object-cover object-center"
          />
        </picture>
        <h2 class="text-light text-center text-xl font-extrabold">{user.displayName}</h2>
      ) : (
        <picture class="border-dark mx-1 size-28 overflow-hidden rounded-full border-4">
          <Image
            loading="eager"
            src={imageProfile}
            alt="img profile of Jinwoo"
            class="aspect-square size-full object-cover object-center"
          />
        </picture>
        <h2 class="text-light text-center text-xl font-extrabold">Jinwoo</h2>
      )
    }
  </section>
  <nav class="nav relative mx-2 flex flex-col justify-center gap-4">
    <InitBackdrop client:only="svelte"/>

    <div>
      <ul class="flex flex-col gap-0.5">
        <BarItem href="/">
          <DashboardIcon class="size-4" />
          Dashboard
        </BarItem>
      </ul>
    </div>
    {
      menuItems.map((section) => (
        <div>
          <h3 class="text-dark select-none rounded-lg px-2 text-base font-extrabold">
            {section.title}
          </h3>
          <ul class="flex flex-col gap-0.5">
            {section.items?.map((item) => (
              <BarItem href={item.url} class="pl-4">
                <item.icon class="size-4" />
                {item.title}
              </BarItem>
            ))}
          </ul>
        </div>
      ))
    }

    <div>
      <ul class="flex flex-col gap-0.5">
        <BarItem href="/settings">
          <SettingsIcon class="size-4" />
          Settings
        </BarItem>
      </ul>
    </div>
  </nav>

  <footer class="mx-4 mb-3 flex grow basis-0 items-end justify-center">
    <form action="/api/auth/signout" class="w-full">
      <button
        class="bg-dark text-light w-full cursor-pointer rounded py-1.5 text-center text-lg font-bold"
        type="submit"
      >
        Log Out
      </button>
    </form>
  </footer>
</aside>
